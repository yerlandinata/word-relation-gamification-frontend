{"ast":null,"code":"import { ofType, combineEpics } from \"redux-observable\";\nimport { FETCH_WORD_RELATION_TYPES, fetchWordRelationTypesSuccess, fetchWordRelationTypesFailure, fetchWordRelationTypes } from \"./reducer\";\nimport { mergeMap, map, catchError, mapTo } from \"rxjs/operators\";\nimport { request } from \"universal-rxjs-ajax\";\nimport { of } from \"rxjs\";\nimport { BEGIN_GAME } from \"../MainPage/reducer\";\n\nvar beginGameEpic = function beginGameEpic(action$) {\n  return action$.pipe(ofType(BEGIN_GAME), mapTo(fetchWordRelationTypes()));\n};\n\nvar fetchWordRelationTypesEpic = function fetchWordRelationTypesEpic(action$, state$, _ref) {\n  var apiBaseUrl = _ref.apiBaseUrl;\n  return action$.pipe(ofType(FETCH_WORD_RELATION_TYPES), mergeMap(function (action) {\n    return request({\n      url: \"\".concat(apiBaseUrl, \"/word_relation_types\")\n    }).pipe(map(function (_ref2) {\n      var response = _ref2.response;\n      console.log('wordpair api response:', response);\n      return fetchWordRelationTypesSuccess(response.map(function (wrt) {\n        return {\n          id: wrt.id,\n          description: wrt.human_desc\n        };\n      }));\n    }), catchError(function (error) {\n      return of(fetchWordRelationTypesFailure(error.xhr.response));\n    }));\n  }));\n};\n\nvar annotationEpics = combineEpics(beginGameEpic, fetchWordRelationTypesEpic);\nexport default annotationEpics;","map":{"version":3,"sources":["C:/Users/yerla/UI/Semester7/TACodes/word-relation-gamification-frontend/modules/Annotation/epics.js"],"names":["ofType","combineEpics","FETCH_WORD_RELATION_TYPES","fetchWordRelationTypesSuccess","fetchWordRelationTypesFailure","fetchWordRelationTypes","mergeMap","map","catchError","mapTo","request","of","BEGIN_GAME","beginGameEpic","action$","pipe","fetchWordRelationTypesEpic","state$","apiBaseUrl","action","url","response","console","log","wrt","id","description","human_desc","error","xhr","annotationEpics"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,kBAArC;AACA,SAASC,yBAAT,EAAoCC,6BAApC,EAAmEC,6BAAnE,EAAkGC,sBAAlG;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAiD,gBAAjD;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,UAAT;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,OAAD;AAAA,SAClBA,OAAO,CAACC,IAAR,CACIf,MAAM,CAACY,UAAD,CADV,EAEIH,KAAK,CAACJ,sBAAsB,EAAvB,CAFT,CADkB;AAAA,CAAtB;;AAMA,IAAMW,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACF,OAAD,EAAUG,MAAV;AAAA,MAAmBC,UAAnB,QAAmBA,UAAnB;AAAA,SAC/BJ,OAAO,CAACC,IAAR,CACIf,MAAM,CAACE,yBAAD,CADV,EAEII,QAAQ,CAAC,UAAAa,MAAM;AAAA,WACXT,OAAO,CAAC;AACJU,MAAAA,GAAG,YAAKF,UAAL;AADC,KAAD,CAAP,CAEGH,IAFH,CAGIR,GAAG,CAAC,iBACA;AAAA,UADEc,QACF,SADEA,QACF;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAtC;AACA,aAAOlB,6BAA6B,CAChCkB,QAAQ,CAACd,GAAT,CACI,UAACiB,GAAD;AAAA,eAAU;AACNC,UAAAA,EAAE,EAAED,GAAG,CAACC,EADF;AAENC,UAAAA,WAAW,EAAEF,GAAG,CAACG;AAFX,SAAV;AAAA,OADJ,CADgC,CAApC;AAQH,KAXF,CAHP,EAgBInB,UAAU,CAAC,UAAAoB,KAAK;AAAA,aACZjB,EAAE,CACEP,6BAA6B,CACzBwB,KAAK,CAACC,GAAN,CAAUR,QADe,CAD/B,CADU;AAAA,KAAN,CAhBd,CADW;AAAA,GAAP,CAFZ,CAD+B;AAAA,CAAnC;;AA+BA,IAAMS,eAAe,GAAG7B,YAAY,CAChCY,aADgC,EAEhCG,0BAFgC,CAApC;AAKA,eAAec,eAAf","sourcesContent":["import { ofType, combineEpics } from \"redux-observable\"; \r\nimport { FETCH_WORD_RELATION_TYPES, fetchWordRelationTypesSuccess, fetchWordRelationTypesFailure, fetchWordRelationTypes } from \"./reducer\";\r\nimport { mergeMap, map, catchError, mapTo } from \"rxjs/operators\";\r\nimport { request } from \"universal-rxjs-ajax\";\r\nimport { of } from \"rxjs\";\r\nimport { BEGIN_GAME } from \"modules/MainPage/reducer\";\r\n\r\nconst beginGameEpic = (action$) =>\r\n    action$.pipe(\r\n        ofType(BEGIN_GAME),\r\n        mapTo(fetchWordRelationTypes())\r\n    )\r\n\r\nconst fetchWordRelationTypesEpic = (action$, state$, {apiBaseUrl}) =>\r\n    action$.pipe(\r\n        ofType(FETCH_WORD_RELATION_TYPES),\r\n        mergeMap(action =>\r\n            request({\r\n                url: `${apiBaseUrl}/word_relation_types`,\r\n            }).pipe(\r\n                map(({response}) =>\r\n                    {\r\n                        console.log('wordpair api response:', response)\r\n                        return fetchWordRelationTypesSuccess(\r\n                            response.map(\r\n                                (wrt) => ({\r\n                                    id: wrt.id,\r\n                                    description: wrt.human_desc\r\n                                })\r\n                            )\r\n                        )\r\n                    }\r\n                ),\r\n                catchError(error =>\r\n                    of(\r\n                        fetchWordRelationTypesFailure(\r\n                            error.xhr.response,\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n    )\r\n\r\nconst annotationEpics = combineEpics(\r\n    beginGameEpic,\r\n    fetchWordRelationTypesEpic,\r\n)\r\n\r\nexport default annotationEpics\r\n"]},"metadata":{},"sourceType":"module"}