{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport const FETCH_PAIR = 'WordPair/FETCH';\nexport const FETCH_PAIR_SUCCESS = 'WordPair/FETCH_SUCCESS';\nexport const FETCH_PAIR_FAILURE = 'WordPair/FETCH_FAILURE';\nexport const fetchPair = () => ({\n  type: FETCH_PAIR\n});\nexport const fetchPairSuccess = wordPair => ({\n  type: FETCH_PAIR_SUCCESS,\n  payload: {\n    wordPair\n  }\n});\nexport const fetchPairFailure = error => ({\n  type: FETCH_PAIR_FAILURE,\n  payload: {\n    error\n  }\n});\nconst INITIAL_STATE = {\n  id: null,\n  word1: '',\n  word2: '',\n  example: '',\n  isLoading: true\n};\n\nconst reducer = (state = INITIAL_STATE, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_PAIR:\n      return _objectSpread({}, state, {\n        isLoading: true\n      });\n\n    case FETCH_PAIR_SUCCESS:\n      return _objectSpread({\n        isLoading: false\n      }, payload.wordPair);\n\n    case FETCH_PAIR_FAILURE:\n      return _objectSpread({}, state, {\n        isLoading: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Users/yerla/UI/Semester7/TACodes/word-relation-gamification-frontend/modules/WordPair/reducer.js"],"names":["FETCH_PAIR","FETCH_PAIR_SUCCESS","FETCH_PAIR_FAILURE","fetchPair","type","fetchPairSuccess","wordPair","payload","fetchPairFailure","error","INITIAL_STATE","id","word1","word2","example","isLoading","reducer","state"],"mappings":";AAAA,OAAO,MAAMA,UAAU,GAAG,gBAAnB;AACP,OAAO,MAAMC,kBAAkB,GAAG,wBAA3B;AACP,OAAO,MAAMC,kBAAkB,GAAG,wBAA3B;AAEP,OAAO,MAAMC,SAAS,GAAG,OAAO;AAC5BC,EAAAA,IAAI,EAAEJ;AADsB,CAAP,CAAlB;AAIP,OAAO,MAAMK,gBAAgB,GAAIC,QAAD,KAAe;AAC3CF,EAAAA,IAAI,EAAEH,kBADqC;AAE3CM,EAAAA,OAAO,EAAE;AAAED,IAAAA;AAAF;AAFkC,CAAf,CAAzB;AAKP,OAAO,MAAME,gBAAgB,GAAIC,KAAD,KAAY;AACxCL,EAAAA,IAAI,EAAEF,kBADkC;AAExCK,EAAAA,OAAO,EAAE;AAAEE,IAAAA;AAAF;AAF+B,CAAZ,CAAzB;AAKP,MAAMC,aAAa,GAAG;AAClBC,EAAAA,EAAE,EAAE,IADc;AAElBC,EAAAA,KAAK,EAAE,EAFW;AAGlBC,EAAAA,KAAK,EAAE,EAHW;AAIlBC,EAAAA,OAAO,EAAE,EAJS;AAKlBC,EAAAA,SAAS,EAAE;AALO,CAAtB;;AAQA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwB;AAAEN,EAAAA,IAAF;AAAQG,EAAAA;AAAR,CAAxB,KAA8C;AAC1D,UAAQH,IAAR;AACI,SAAKJ,UAAL;AACI,+BACOiB,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ,SAAKd,kBAAL;AACI;AACIc,QAAAA,SAAS,EAAE;AADf,SAEOR,OAAO,CAACD,QAFf;;AAIJ,SAAKJ,kBAAL;AACI,+BACOe,KADP;AAEIF,QAAAA,SAAS,EAAE;AAFf;;AAIJ;AACI,aAAOE,KAAP;AAjBR;AAmBH,CApBD;;AAsBA,eAAeD,OAAf","sourcesContent":["export const FETCH_PAIR = 'WordPair/FETCH'\r\nexport const FETCH_PAIR_SUCCESS = 'WordPair/FETCH_SUCCESS'\r\nexport const FETCH_PAIR_FAILURE = 'WordPair/FETCH_FAILURE'\r\n\r\nexport const fetchPair = () => ({\r\n    type: FETCH_PAIR,\r\n})\r\n\r\nexport const fetchPairSuccess = (wordPair) => ({\r\n    type: FETCH_PAIR_SUCCESS,\r\n    payload: { wordPair }\r\n})\r\n\r\nexport const fetchPairFailure = (error) => ({\r\n    type: FETCH_PAIR_FAILURE,\r\n    payload: { error }\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    id: null,\r\n    word1: '',\r\n    word2: '',\r\n    example: '',\r\n    isLoading: true,\r\n}\r\n\r\nconst reducer = (state = INITIAL_STATE, { type, payload }) => {\r\n    switch (type) {\r\n        case FETCH_PAIR:\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n            }\r\n        case FETCH_PAIR_SUCCESS:\r\n            return {\r\n                isLoading: false,\r\n                ...payload.wordPair,\r\n            }\r\n        case FETCH_PAIR_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer\r\n"]},"metadata":{},"sourceType":"module"}