{"ast":null,"code":"import { ofType, combineEpics } from \"redux-observable\";\nimport { FETCH_WORD_RELATION_TYPES, fetchWordRelationTypesSuccess, fetchWordRelationTypesFailure, fetchWordRelationTypes } from \"./reducer\";\nimport { mergeMap, map, catchError, mapTo } from \"rxjs/operators\";\nimport { request } from \"universal-rxjs-ajax\";\nimport { of } from \"rxjs\";\nimport { BEGIN_GAME } from \"../MainPage/reducer\";\n\nconst beginGameEpic = action$ => action$.pipe(ofType(BEGIN_GAME), mapTo(fetchWordRelationTypes()));\n\nconst fetchWordRelationTypesEpic = (action$, state$, {\n  apiBaseUrl\n}) => action$.pipe(ofType(FETCH_WORD_RELATION_TYPES), mergeMap(action => request({\n  url: `${apiBaseUrl}/word_relation_types`\n}).pipe(map(({\n  response\n}) => {\n  console.log('wordpair api response:', response);\n  return fetchWordRelationTypesSuccess(response.map(wrt => ({\n    id: wrt.id,\n    description: wrt.human_desc\n  })));\n}), catchError(error => of(fetchWordRelationTypesFailure(error.xhr.response))))));\n\nconst annotationEpics = combineEpics(beginGameEpic, fetchWordRelationTypesEpic);\nexport default annotationEpics;","map":{"version":3,"sources":["C:/Users/yerla/UI/Semester7/TACodes/word-relation-gamification-frontend/modules/Annotation/epics.js"],"names":["ofType","combineEpics","FETCH_WORD_RELATION_TYPES","fetchWordRelationTypesSuccess","fetchWordRelationTypesFailure","fetchWordRelationTypes","mergeMap","map","catchError","mapTo","request","of","BEGIN_GAME","beginGameEpic","action$","pipe","fetchWordRelationTypesEpic","state$","apiBaseUrl","action","url","response","console","log","wrt","id","description","human_desc","error","xhr","annotationEpics"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,YAAjB,QAAqC,kBAArC;AACA,SAASC,yBAAT,EAAoCC,6BAApC,EAAmEC,6BAAnE,EAAkGC,sBAAlG;AACA,SAASC,QAAT,EAAmBC,GAAnB,EAAwBC,UAAxB,EAAoCC,KAApC,QAAiD,gBAAjD;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,SAASC,UAAT;;AAEA,MAAMC,aAAa,GAAIC,OAAD,IAClBA,OAAO,CAACC,IAAR,CACIf,MAAM,CAACY,UAAD,CADV,EAEIH,KAAK,CAACJ,sBAAsB,EAAvB,CAFT,CADJ;;AAMA,MAAMW,0BAA0B,GAAG,CAACF,OAAD,EAAUG,MAAV,EAAkB;AAACC,EAAAA;AAAD,CAAlB,KAC/BJ,OAAO,CAACC,IAAR,CACIf,MAAM,CAACE,yBAAD,CADV,EAEII,QAAQ,CAACa,MAAM,IACXT,OAAO,CAAC;AACJU,EAAAA,GAAG,EAAG,GAAEF,UAAW;AADf,CAAD,CAAP,CAEGH,IAFH,CAGIR,GAAG,CAAC,CAAC;AAACc,EAAAA;AAAD,CAAD,KACA;AACIC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCF,QAAtC;AACA,SAAOlB,6BAA6B,CAChCkB,QAAQ,CAACd,GAAT,CACKiB,GAAD,KAAU;AACNC,IAAAA,EAAE,EAAED,GAAG,CAACC,EADF;AAENC,IAAAA,WAAW,EAAEF,GAAG,CAACG;AAFX,GAAV,CADJ,CADgC,CAApC;AAQH,CAXF,CAHP,EAgBInB,UAAU,CAACoB,KAAK,IACZjB,EAAE,CACEP,6BAA6B,CACzBwB,KAAK,CAACC,GAAN,CAAUR,QADe,CAD/B,CADI,CAhBd,CADI,CAFZ,CADJ;;AA+BA,MAAMS,eAAe,GAAG7B,YAAY,CAChCY,aADgC,EAEhCG,0BAFgC,CAApC;AAKA,eAAec,eAAf","sourcesContent":["import { ofType, combineEpics } from \"redux-observable\"; \r\nimport { FETCH_WORD_RELATION_TYPES, fetchWordRelationTypesSuccess, fetchWordRelationTypesFailure, fetchWordRelationTypes } from \"./reducer\";\r\nimport { mergeMap, map, catchError, mapTo } from \"rxjs/operators\";\r\nimport { request } from \"universal-rxjs-ajax\";\r\nimport { of } from \"rxjs\";\r\nimport { BEGIN_GAME } from \"modules/MainPage/reducer\";\r\n\r\nconst beginGameEpic = (action$) =>\r\n    action$.pipe(\r\n        ofType(BEGIN_GAME),\r\n        mapTo(fetchWordRelationTypes())\r\n    )\r\n\r\nconst fetchWordRelationTypesEpic = (action$, state$, {apiBaseUrl}) =>\r\n    action$.pipe(\r\n        ofType(FETCH_WORD_RELATION_TYPES),\r\n        mergeMap(action =>\r\n            request({\r\n                url: `${apiBaseUrl}/word_relation_types`,\r\n            }).pipe(\r\n                map(({response}) =>\r\n                    {\r\n                        console.log('wordpair api response:', response)\r\n                        return fetchWordRelationTypesSuccess(\r\n                            response.map(\r\n                                (wrt) => ({\r\n                                    id: wrt.id,\r\n                                    description: wrt.human_desc\r\n                                })\r\n                            )\r\n                        )\r\n                    }\r\n                ),\r\n                catchError(error =>\r\n                    of(\r\n                        fetchWordRelationTypesFailure(\r\n                            error.xhr.response,\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n        )\r\n    )\r\n\r\nconst annotationEpics = combineEpics(\r\n    beginGameEpic,\r\n    fetchWordRelationTypesEpic,\r\n)\r\n\r\nexport default annotationEpics\r\n"]},"metadata":{},"sourceType":"module"}